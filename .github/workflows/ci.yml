name: Karman Web CI

on:
  pull_request:
  push:
    branches: [ main ]
    tags: [ "*" ]

jobs:
  type-check:
    name: Type Check
    runs-on: ubuntu-latest
    steps:
      - name: Check Out Code
        uses: actions/checkout@v3
      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest
      - name: Install Dependencies
        run: bun install --frozen-lockfile
      - name: Run Type Checking
        run: bun run check

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Check Out Code
        uses: actions/checkout@v3
      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest
      - name: Install Dependencies
        run: bun install --frozen-lockfile
      - name: Run Linting
        run: bun run lint

  test:
    name: Test
    runs-on: ubuntu-latest
    needs: [ type-check, lint ]
    steps:
      - name: Check Out Code
        uses: actions/checkout@v3
      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest
      - name: Install Dependencies
        run: bun install --frozen-lockfile
      - name: Run Tests
        run: bun test

  test-build:
    name: Test Build
    runs-on: ubuntu-latest
    needs: [ type-check, lint ]
    steps:
      - name: Check Out Code
        uses: actions/checkout@v3
      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest
      - name: Install Dependencies
        run: bun install --frozen-lockfile
      - name: Build
        run: bun run build

  publish:
    name: Publish
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' }}
    needs: [ test, test-build ]
    steps:
      - name: Docker Meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/Karaoke-Manager/web
          flavor: |
            latest=false
          tags: |
            type=edge,enable={{is_default_branch}}
            type=semver,pattern=v{{major}},enable=${{ !startsWith(github.ref, 'refs/tags/v0.') }}
            type=semver,pattern=v{{major}}.{{minor}}
            type=semver,pattern=v{{version}}
            type=semver,pattern=latest
      - name: Login To GitHub Container Registry
        uses: docker/login-action@v2
        with:
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          registry: ghcr.io
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
